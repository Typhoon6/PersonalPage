{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\Future\\\\personal-project\\\\src\\\\pages\\\\Sudoku\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { GameSection } from './components/GameSection';\nimport { StatusSection } from './components/StatusSection';\nimport { getUniqueSudoku } from './solver/UniqueSudoku';\nimport { useSudokuContext } from './context/SudokuContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Game() {\n  _s();\n\n  let {\n    numberSelected,\n    setNumberSelected,\n    gameArray,\n    setGameArray,\n    difficulty,\n    setDifficulty,\n    setTimeGameStarted,\n    fastMode,\n    setFastMode,\n    cellSelected,\n    setCellSelected,\n    initArray,\n    setInitArray,\n    setWon\n  } = useSudokuContext();\n  let [mistakesMode, setMistakesMode] = useState(false);\n  let [history, setHistory] = useState([]);\n  let [solvedArray, setSolvedArray] = useState([]);\n  let [overlay, setOverlay] = useState(false); // New Game + Initialise Variables\n\n  function createNewGame(e) {\n    let [temporaryInitArray, temporarySolvedArray] = getUniqueSudoku(difficulty, e);\n    setInitArray(temporaryInitArray);\n    setGameArray(temporaryInitArray);\n    setSolvedArray(temporarySolvedArray);\n    setNumberSelected('0');\n    setTimeGameStarted(moment());\n    setCellSelected(-1);\n    setHistory([]);\n    setWon(false);\n  }\n  /**\n   * 检查游戏是否已解决。\n   */\n\n\n  function _isSolved(index, value) {\n    if (gameArray.every((cell, cellIndex) => {\n      if (cellIndex === index) return value === solvedArray[cellIndex];else return cell === solvedArray[cellIndex];\n    })) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * 用给定的“值”填充单元格\n   * 用于根据需要填充/擦除。\n   */\n\n\n  function _fillCell(index, value) {\n    if (initArray[index] === '0') {\n      let tempArray = gameArray.slice();\n      let tempHistory = history.slice();\n      tempHistory.push(gameArray.slice());\n      setHistory(tempHistory);\n      tempArray[index] = value;\n      setGameArray(tempArray);\n\n      if (_isSolved(index, value)) {\n        setOverlay(true);\n        setWon(true);\n      }\n    }\n  }\n  /**\n   * “用户填写”将传递给\n   * 上面的 _fillCell 函数。\n   */\n\n\n  function _userFillCell(index, value) {\n    if (mistakesMode) {\n      if (value === solvedArray[index]) {\n        _fillCell(index, value);\n      } else {}\n    } else {\n      _fillCell(index, value);\n    }\n  }\n  /**\n   * 点击“新游戏”链接，\n   *创建一个新游戏。\n   */\n\n\n  function onClickNewGame() {\n    document.getElementById(\"new_game_modal\").style.display = \"block\";\n    createNewGame();\n  }\n  /**\n   * 单击游戏单元格。\n   */\n\n\n  function onClickCell(indexOfArray) {\n    if (fastMode && numberSelected !== '0') {\n      _userFillCell(indexOfArray, numberSelected);\n    }\n\n    setCellSelected(indexOfArray);\n  }\n  /**\n   * 关于改变难度，\n   * 1. 更新“难度”等级\n   * 2. 创建新游戏\n   */\n\n\n  function onChangeDifficulty(e) {\n    setDifficulty(e.target.value);\n    createNewGame(e);\n  }\n  /**\n   * 单击状态部分中的数字时，\n   *填充单元格或设置数字。\n   */\n\n\n  function onClickNumber(number) {\n    if (fastMode) {\n      setNumberSelected(number);\n    } else if (cellSelected !== -1) {\n      _userFillCell(cellSelected, number);\n    }\n  }\n  /**\n   * 单击撤消时，\n   * 尝试撤消最新的更改。\n   */\n\n\n  function onClickUndo() {\n    if (history.length) {\n      let tempHistory = history.slice();\n      let tempArray = tempHistory.pop();\n      setHistory(tempHistory);\n      if (tempArray !== undefined) setGameArray(tempArray);\n    }\n  }\n  /**\n   * 单击擦除时，\n   * 尝试删除单元格。\n   */\n\n\n  function onClickErase() {\n    if (cellSelected !== -1 && gameArray[cellSelected] !== '0') {\n      _fillCell(cellSelected, '0');\n    }\n  }\n  /**\n   * 点击提示，\n   * 如果填充了空或错误的数字，则填充选定的单元格。\n   */\n\n\n  function onClickHint() {\n    if (cellSelected !== -1) {\n      _fillCell(cellSelected, solvedArray[cellSelected]);\n    }\n  }\n  /**\n   * 切换错误模式\n   */\n\n\n  function onClickMistakesMode() {\n    setMistakesMode(!mistakesMode);\n  }\n  /**\n   * 切换快速模式\n   */\n\n\n  function onClickFastMode() {\n    if (fastMode) {\n      setNumberSelected('0');\n    }\n\n    setCellSelected(-1);\n    setFastMode(!fastMode);\n  }\n  /**\n   * 关闭 Click 上的覆盖。\n   */\n\n\n  function onClickOverlay() {\n    setOverlay(false);\n    createNewGame();\n  } // Start a New Game\n\n\n  useEffect(() => {\n    // Have so if you click off the board then it removes selection\n    window.addEventListener('click', function (e) {\n      if (e.target !== document.getElementsByClassName('sudoku_game')[0] && !e.target.className.includes(\"cell\")) {\n        setCellSelected(-1);\n      }\n    });\n    createNewGame();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: overlay ? \"container blur\" : \"container \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innercontainer center_div\",\n        children: [/*#__PURE__*/_jsxDEV(GameSection, {\n          onClick: indexOfArray => onClickCell(indexOfArray)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StatusSection, {\n          onClickNumber: number => onClickNumber(number),\n          onChange: e => onChangeDifficulty(e),\n          onClickUndo: onClickUndo,\n          onClickErase: onClickErase,\n          onClickHint: onClickHint,\n          onClickMistakesMode: onClickMistakesMode,\n          onClickFastMode: onClickFastMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new_game_btn\",\n      onClick: onClickNewGame,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new_game_modal\",\n      id: \"new_game_modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new_game_modal_bg new_game_modal_exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new_game_modal_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Amazing Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pure Vanilla JavaScript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new_game_modal_close new_game_modal_exit\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: overlay ? \"overlay overlay--visible\" : \"overlay\",\n      onClick: onClickOverlay,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"overlay__text\",\n        children: [\"You \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"overlay__textspan1\",\n          children: \"solved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"overlay__textspan2\",\n          children: \"it!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"8N361aPULsKD35NYlz+c5jGU4ko=\", false, function () {\n  return [useSudokuContext];\n});\n\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/Users/admin/Downloads/Future/personal-project/src/pages/Sudoku/Game.js"],"names":["React","useState","useEffect","moment","GameSection","StatusSection","getUniqueSudoku","useSudokuContext","Game","numberSelected","setNumberSelected","gameArray","setGameArray","difficulty","setDifficulty","setTimeGameStarted","fastMode","setFastMode","cellSelected","setCellSelected","initArray","setInitArray","setWon","mistakesMode","setMistakesMode","history","setHistory","solvedArray","setSolvedArray","overlay","setOverlay","createNewGame","e","temporaryInitArray","temporarySolvedArray","_isSolved","index","value","every","cell","cellIndex","_fillCell","tempArray","slice","tempHistory","push","_userFillCell","onClickNewGame","document","getElementById","style","display","onClickCell","indexOfArray","onChangeDifficulty","target","onClickNumber","number","onClickUndo","length","pop","undefined","onClickErase","onClickHint","onClickMistakesMode","onClickFastMode","onClickOverlay","window","addEventListener","getElementsByClassName","className","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nimport { GameSection } from './components/GameSection';\nimport { StatusSection } from './components/StatusSection';\nimport { getUniqueSudoku } from './solver/UniqueSudoku';\nimport { useSudokuContext } from './context/SudokuContext';\n\n\n\nexport function Game (){\n  \n  let { numberSelected, setNumberSelected,\n        gameArray, setGameArray,\n        difficulty, setDifficulty,\n        setTimeGameStarted,\n        fastMode, setFastMode,\n        cellSelected, setCellSelected,\n        initArray, setInitArray,\n        setWon } = useSudokuContext();\n\n  let [ mistakesMode, setMistakesMode ] = useState(false);\n  let [ history, setHistory ] = useState([]);\n  let [ solvedArray, setSolvedArray ] = useState([]);\n  let [ overlay, setOverlay ] = useState(false);\n\n  // New Game + Initialise Variables\n  function createNewGame(e) {\n    let [ temporaryInitArray, temporarySolvedArray ] = getUniqueSudoku(difficulty, e);\n\n    setInitArray(temporaryInitArray);\n    setGameArray(temporaryInitArray);\n    setSolvedArray(temporarySolvedArray);\n    setNumberSelected('0');\n    setTimeGameStarted(moment());\n    setCellSelected(-1);\n    setHistory([]);\n    setWon(false);\n  }\n\n  /**\n   * 检查游戏是否已解决。\n   */\n  function _isSolved(index, value) {\n    if (gameArray.every((cell, cellIndex) => {\n          if (cellIndex === index)\n            return value === solvedArray[cellIndex];\n          else\n            return cell === solvedArray[cellIndex];\n        })) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 用给定的“值”填充单元格\n   * 用于根据需要填充/擦除。\n   */\n  function _fillCell(index, value) {\n    if (initArray[index] === '0') {\n      let tempArray = gameArray.slice();\n      let tempHistory = history.slice();\n      tempHistory.push(gameArray.slice());\n      setHistory(tempHistory);\n\n      tempArray[index] = value;\n      setGameArray(tempArray);\n\n      if (_isSolved(index, value)) {\n        setOverlay(true);\n        setWon(true);\n      }\n    }\n  }\n\n  /**\n   * “用户填写”将传递给\n   * 上面的 _fillCell 函数。\n   */\n  function _userFillCell(index, value) {\n    if (mistakesMode) {\n      if (value === solvedArray[index]) {\n        _fillCell(index, value);\n      }\n      else {\n      }\n    } else {\n      _fillCell(index, value);\n    }\n  }\n\n  /**\n   * 点击“新游戏”链接，\n   *创建一个新游戏。\n   */\n  function onClickNewGame() {\n    document.getElementById(\"new_game_modal\").style.display = \"block\";\n    createNewGame();\n  }\n\n  /**\n   * 单击游戏单元格。\n   */\n  function onClickCell(indexOfArray) {\n    if (fastMode && numberSelected !== '0') {\n      _userFillCell(indexOfArray, numberSelected);\n    }\n    setCellSelected(indexOfArray);\n  }\n\n  /**\n   * 关于改变难度，\n   * 1. 更新“难度”等级\n   * 2. 创建新游戏\n   */\n  function onChangeDifficulty(e) {\n    setDifficulty(e.target.value);\n    createNewGame(e);\n  }\n\n  /**\n   * 单击状态部分中的数字时，\n   *填充单元格或设置数字。\n   */\n  function onClickNumber(number) {\n    if (fastMode) {\n      setNumberSelected(number)\n    } else if (cellSelected !== -1) {\n      _userFillCell(cellSelected,number);\n    }\n  }\n\n  /**\n   * 单击撤消时，\n   * 尝试撤消最新的更改。\n   */\n  function onClickUndo() {\n    if(history.length) {\n      let tempHistory = history.slice();\n      let tempArray = tempHistory.pop();\n      setHistory(tempHistory);\n      if (tempArray !== undefined)\n        setGameArray(tempArray);\n    }\n  }\n\n  /**\n   * 单击擦除时，\n   * 尝试删除单元格。\n   */\n  function onClickErase() {\n    if(cellSelected !== -1 && gameArray[cellSelected] !== '0') {\n      _fillCell(cellSelected, '0');\n    }\n  }\n\n  /**\n   * 点击提示，\n   * 如果填充了空或错误的数字，则填充选定的单元格。\n   */\n  function onClickHint() {\n    if (cellSelected !== -1) {\n      _fillCell(cellSelected, solvedArray[cellSelected]);\n    }\n  }\n\n  /**\n   * 切换错误模式\n   */\n  function  onClickMistakesMode() {\n    setMistakesMode(!mistakesMode);\n  }\n\n  /**\n   * 切换快速模式\n   */\n  function onClickFastMode() {\n    if (fastMode) {\n      setNumberSelected('0');\n    }\n    setCellSelected(-1);\n    setFastMode(!fastMode);\n  }\n\n  /**\n   * 关闭 Click 上的覆盖。\n   */\n  function onClickOverlay() {\n    setOverlay(false);\n    createNewGame();\n  }\n  \n  // Start a New Game\n  useEffect(() => {\n    // Have so if you click off the board then it removes selection\n    window.addEventListener('click', function(e){   \n      if(e.target !== document.getElementsByClassName('sudoku_game')[0] &&\n        !e.target.className.includes(\"cell\")) {\n        setCellSelected(-1);\n      } \n    });\n    createNewGame();\n  }, []);\n\n  return (\n    <div>\n      <div className={overlay?\"container blur\":\"container \"}>\n        \n\n        <div className=\"innercontainer center_div\">\n          <GameSection\n            onClick={(indexOfArray) => onClickCell(indexOfArray)}\n          />\n          <StatusSection\n            onClickNumber={(number) => onClickNumber(number)}\n            onChange={(e) => onChangeDifficulty(e)}\n            onClickUndo={onClickUndo}\n            onClickErase={onClickErase}\n            onClickHint={onClickHint}\n            onClickMistakesMode={onClickMistakesMode}\n            onClickFastMode={onClickFastMode}\n          />\n        </div>\n\n      </div>\n      <button className='new_game_btn' onClick={onClickNewGame}>New Game</button>\n\n\n      <div className=\"new_game_modal\" id=\"new_game_modal\">\n        <div className=\"new_game_modal_bg new_game_modal_exit\"></div>\n        <div className=\"new_game_modal_container\">\n          <h1>Amazing Modal</h1>\n          <h2>Pure Vanilla JavaScript</h2>\n          <button className=\"new_game_modal_close new_game_modal_exit\">X</button>\n        </div>\n      </div>\n\n      <div className= { overlay\n                        ? \"overlay overlay--visible\"\n                        : \"overlay\"\n                      }\n           onClick={onClickOverlay}\n      >\n        <h2 className=\"overlay__text\">\n          You <span className=\"overlay__textspan1\">solved</span> <span className=\"overlay__textspan2\">it!</span>\n        </h2>\n      </div>\n</div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}