{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\Future\\\\personal-project\\\\src\\\\pages\\\\cellml_page.js\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport { Link } from \"react-router-dom\";\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport \"../style/projectselector.css\";\nimport \"../style/pageselector_options.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SEL = 'custom-section';\nconst SECTION_SEL = `.${SEL}`; // NOTE: if using fullpage extensions/plugins put them here and pass it as props.\n// This is no longer required for the scrollOverflow option.\n\nconst pluginWrapper = () => {\n  /*\r\n  * require('./fullpage.fadingEffect.min'); // Optional. Required when using the \"fadingEffect\" extension.\r\n  */\n};\n\nconst originalColors = ['#ff5f45', '#0798ec', '#fc6c7c', '#435b71', 'orange', 'blue', 'purple', 'yellow'];\n\nclass CellMLPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sectionsColor: [...originalColors],\n      fullpages: [{\n        text: 'Section 1'\n      }, {\n        text: 'Section 2'\n      }, {\n        text: 'Section 3'\n      }]\n    };\n  }\n\n  onLeave(origin, destination, direction) {\n    console.log('onLeave', {\n      origin,\n      destination,\n      direction\n    }); // arguments are mapped in order of fullpage.js callback arguments do something\n    // with the event\n  }\n\n  handleChangeColors() {\n    const newColors = this.state.sectionsColor[0] === 'yellow' ? [...originalColors] : ['yellow', 'blue', 'white'];\n    this.setState({\n      sectionsColor: newColors\n    });\n  }\n\n  handleAddSection() {\n    this.setState(state => {\n      const {\n        fullpages\n      } = state;\n      const {\n        length\n      } = fullpages;\n      fullpages.push({\n        text: `section ${length + 1}`,\n        id: Math.random()\n      });\n      return {\n        fullpages: [...fullpages]\n      };\n    });\n  }\n\n  handleRemoveSection() {\n    this.setState(state => {\n      const {\n        fullpages\n      } = state;\n      const newPages = [...fullpages];\n      newPages.pop();\n      return {\n        fullpages: newPages\n      };\n    });\n  }\n\n  moveSectionDown() {\n    fullpage_api.moveSectionDown();\n  }\n\n  render() {\n    const {\n      fullpages\n    } = this.state;\n\n    if (!fullpages.length) {\n      return null;\n    }\n\n    const Menu = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      style: {\n        position: 'fixed',\n        top: 0,\n        zIndex: 100\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"actions\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleAddSection(),\n            children: \"Add Section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleRemoveSection(),\n            children: \"Remove Section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleChangeColors(),\n            children: \"Change background colors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.moveSectionDown(),\n            children: \"Move Section Down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactFullpage, {\n        debug: true\n        /* Debug logging */\n        // Required when using extensions\n        ,\n        pluginWrapper: pluginWrapper // fullpage options\n        ,\n        licenseKey: 'YOUR_KEY_HERE' // Get one from https://alvarotrigo.com/fullPage/pricing/\n        ,\n        navigation: true,\n        anchors: ['firstPage', 'secondPage', 'thirdPage'],\n        sectionSelector: SECTION_SEL,\n        onLeave: this.onLeave.bind(this),\n        sectionsColor: this.state.sectionsColor,\n        render: comp => /*#__PURE__*/_jsxDEV(ReactFullpage.Wrapper, {\n          children: fullpages.map(_ref => {\n            let {\n              text\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: SEL,\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)\n            }, text, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById('react-root');\nReactDOM.render( /*#__PURE__*/_jsxDEV(CellMLPage, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 153,\n  columnNumber: 17\n}, this), rootElement);","map":{"version":3,"sources":["C:/Users/admin/Downloads/Future/personal-project/src/pages/cellml_page.js"],"names":["React","useState","BrowserRouter","Router","Route","Routes","ReactDOM","Link","ReactFullpage","SEL","SECTION_SEL","pluginWrapper","originalColors","CellMLPage","Component","constructor","props","state","sectionsColor","fullpages","text","onLeave","origin","destination","direction","console","log","handleChangeColors","newColors","setState","handleAddSection","length","push","id","Math","random","handleRemoveSection","newPages","pop","moveSectionDown","fullpage_api","render","Menu","position","top","zIndex","bind","comp","map","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route , Routes} from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactFullpage from '@fullpage/react-fullpage';\r\n\r\nimport \"../style/projectselector.css\";\r\nimport \"../style/pageselector_options.css\";\r\n\r\nconst SEL = 'custom-section';\r\nconst SECTION_SEL = `.${SEL}`;\r\n\r\n// NOTE: if using fullpage extensions/plugins put them here and pass it as props.\r\n// This is no longer required for the scrollOverflow option.\r\nconst pluginWrapper = () => {\r\n  /*\r\n  * require('./fullpage.fadingEffect.min'); // Optional. Required when using the \"fadingEffect\" extension.\r\n  */\r\n};\r\n\r\nconst originalColors = ['#ff5f45', '#0798ec', '#fc6c7c', '#435b71', 'orange', 'blue', 'purple', 'yellow']\r\n\r\nclass CellMLPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sectionsColor: [...originalColors],\r\n      fullpages: [\r\n        {\r\n          text: 'Section 1',\r\n        },\r\n        {\r\n          text: 'Section 2',\r\n        },\r\n        {\r\n          text: 'Section 3',\r\n        }\r\n      ],\r\n    };\r\n  }\r\n\r\n  onLeave(origin, destination, direction) {\r\n    console.log('onLeave', { origin, destination, direction });\r\n    // arguments are mapped in order of fullpage.js callback arguments do something\r\n    // with the event\r\n  }\r\n\r\n  handleChangeColors() {\r\n    const newColors =\r\n      this.state.sectionsColor[0] === 'yellow'\r\n        ? [...originalColors]\r\n        : ['yellow', 'blue', 'white'];\r\n    this.setState({\r\n      sectionsColor: newColors,\r\n    });\r\n  }\r\n\r\n  handleAddSection() {\r\n    this.setState(state => {\r\n      const { fullpages } = state;\r\n      const { length } = fullpages;\r\n      fullpages.push({\r\n        text: `section ${length + 1}`,\r\n        id: Math.random(),\r\n      });\r\n\r\n      return {\r\n        fullpages: [...fullpages],\r\n      };\r\n    });\r\n  }\r\n\r\n  handleRemoveSection() {\r\n    this.setState(state => {\r\n      const { fullpages } = state;\r\n      const newPages = [...fullpages];\r\n      newPages.pop();\r\n\r\n      return { fullpages: newPages };\r\n    });\r\n  }\r\n\r\n  moveSectionDown() {\r\n    fullpage_api.moveSectionDown();\r\n  }\r\n\r\n  render() {\r\n    const { fullpages } = this.state;\r\n\r\n    if (!fullpages.length) {\r\n      return null;\r\n    }\r\n\r\n    const Menu = () => (\r\n      <div\r\n        className=\"menu\"\r\n        style={{\r\n          position: 'fixed',\r\n          top: 0,\r\n          zIndex: 100,\r\n        }}\r\n      >\r\n        <ul className=\"actions\">\r\n          <li>\r\n            <button onClick={() => this.handleAddSection()}>Add Section</button>\r\n            <button onClick={() => this.handleRemoveSection()}>\r\n              Remove Section\r\n            </button>\r\n            <button onClick={() => this.handleChangeColors()}>\r\n              Change background colors\r\n            </button>\r\n            <button onClick={() => this.moveSectionDown()}>\r\n              Move Section Down\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Menu />\r\n        <ReactFullpage\r\n          debug /* Debug logging */\r\n\r\n          // Required when using extensions\r\n          pluginWrapper={pluginWrapper}\r\n\r\n          // fullpage options\r\n          licenseKey={'YOUR_KEY_HERE'} // Get one from https://alvarotrigo.com/fullPage/pricing/\r\n          navigation\r\n          anchors={['firstPage', 'secondPage', 'thirdPage']}\r\n          sectionSelector={SECTION_SEL}\r\n          onLeave={this.onLeave.bind(this)}\r\n          sectionsColor={this.state.sectionsColor}\r\n\r\n          render={comp => (\r\n            <ReactFullpage.Wrapper>\r\n              {fullpages.map(({ text }) => (\r\n                <div key={text} className={SEL}>\r\n                  <h1>{text}</h1>\r\n                </div>\r\n              ))}\r\n            </ReactFullpage.Wrapper>\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById('react-root');\r\nReactDOM.render(<CellMLPage />, rootElement);\r\n"]},"metadata":{},"sourceType":"module"}