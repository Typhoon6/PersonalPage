{"ast":null,"code":"import React from'react';import{useSudokuContext}from'../context/SudokuContext';// Sudoku Board\nimport{jsx as _jsx}from\"react/jsx-runtime\";export function GameSection(props){var rows=[0,1,2,3,4,5,6,7,8];var _useSudokuContext=useSudokuContext(),numberSelected=_useSudokuContext.numberSelected,gameArray=_useSudokuContext.gameArray,fastMode=_useSudokuContext.fastMode,cellSelected=_useSudokuContext.cellSelected,initArray=_useSudokuContext.initArray;// Check all numbers on board to see if they match\nfunction check_cell_number(row,column){if(fastMode){if(numberSelected===gameArray[row*9+column])return true;return false;}else{if(cellSelected===row*9+column)return true;if(gameArray[cellSelected]==='0')return false;if(gameArray[cellSelected]===gameArray[row*9+column])return true;}}// Highlight Cell\nfunction highlighted_cell(index,value,highlight){if(value!=='0'&&value!==''){if(initArray[index]==='0'||initArray[index]===''){if(highlight==='highlight'){return/*#__PURE__*/_jsx(\"td\",{className:\"cell user_input_cell highlight_cell\",onClick:function onClick(){return props.onClick(index);},children:value},index);}else{return/*#__PURE__*/_jsx(\"td\",{className:\"cell user_input_cell selected_cell\",onClick:function onClick(){return props.onClick(index);},children:value},index);}}else{if(highlight==='highlight'){return/*#__PURE__*/_jsx(\"td\",{className:\"cell default_cell highlight_cell\",onClick:function onClick(){return props.onClick(index);},children:value},index);}else{return/*#__PURE__*/_jsx(\"td\",{className:\"cell default_cell selected_cell\",onClick:function onClick(){return props.onClick(index);},children:value},index);}}}else{if(highlight==='highlight'){return/*#__PURE__*/_jsx(\"td\",{className:\"cell highlight_cell\",onClick:function onClick(){return props.onClick(index);},children:value},index);}else{return/*#__PURE__*/_jsx(\"td\",{className:\"cell selected_cell\",onClick:function onClick(){return props.onClick(index);},children:value},index);}}}// Default Cell: pre-generated cell\nfunction normal_cell(index,value){if(value!=='0'&&value!==''){if(initArray[index]==='0'||initArray[index]===''){return/*#__PURE__*/_jsx(\"td\",{className:\"cell user_input_cell\",onClick:function onClick(){return props.onClick(index);},children:value},index);}else{return/*#__PURE__*/_jsx(\"td\",{className:\"cell default_cell\",onClick:function onClick(){return props.onClick(index);},children:value},index);}}else{return/*#__PURE__*/_jsx(\"td\",{className:\"cell\",onClick:function onClick(){return props.onClick(index);},children:value},index);}}// Sudoku Board [9x9]\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"sudoku_game\",children:/*#__PURE__*/_jsx(\"table\",{id:\"sudoku_board\",children:/*#__PURE__*/_jsx(\"tbody\",{children:rows.map(function(row){return/*#__PURE__*/_jsx(\"tr\",{className:\"sudoku_row\",children:rows.map(function(column){var index=row*9+column;var value=gameArray[index];if(cellSelected===index)return highlighted_cell(index,value,'highlight');if(fastMode){if(numberSelected!=='0'&&check_cell_number(row,column)){return highlighted_cell(index,value,'');}else{return normal_cell(index,value);}}else{if(cellSelected!==-1&&check_cell_number(row,column)){return highlighted_cell(index,value,'');}else{return normal_cell(index,value);}}})},row);})})})});}","map":{"version":3,"sources":["C:/Users/admin/Downloads/Future/personal-project/src/pages/Sudoku/components/GameSection.js"],"names":["React","useSudokuContext","GameSection","props","rows","numberSelected","gameArray","fastMode","cellSelected","initArray","check_cell_number","row","column","highlighted_cell","index","value","highlight","onClick","normal_cell","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSudokuContext } from '../context/SudokuContext';\n\n// Sudoku Board\nexport function GameSection (props) {\n\n  const rows = [0,1,2,3,4,5,6,7,8];\n  let { numberSelected, gameArray, fastMode, cellSelected, initArray } = useSudokuContext();\n\n  // Check all numbers on board to see if they match\n  function check_cell_number(row, column) {\n    if (fastMode) {\n      if (numberSelected === gameArray[row * 9 + column]) return true;\n      return false;\n    } \n    else {\n      if (cellSelected === row * 9 + column) return true;\n      if (gameArray[cellSelected] === '0') return false;\n      if (gameArray[cellSelected] === gameArray[row * 9 + column]) return true;\n    }\n  }\n\n  // Highlight Cell\n  function highlighted_cell(index, value, highlight) {\n    if (value !== '0' && value !== '') {\n      if (initArray[index] === '0' || initArray[index] === '') {\n        if (highlight === 'highlight') {  \n          return (<td className={`cell user_input_cell highlight_cell`} key={index} onClick={() => props.onClick(index)}>{value}</td>)\n        } else {\n          return (<td className={`cell user_input_cell selected_cell`} key={index} onClick={() => props.onClick(index)}>{value}</td>)\n        }\n        \n      } else {\n        if (highlight === 'highlight') { \n          return (<td className={`cell default_cell highlight_cell`} key={index} onClick={() => props.onClick(index)}>{value}</td>)\n        } else {\n          return (<td className={`cell default_cell selected_cell`} key={index} onClick={() => props.onClick(index)}>{value}</td>)\n        }\n        \n      }\n    } \n    else {\n      if (highlight === 'highlight') {\n        return (<td className={`cell highlight_cell`} key={index} onClick={() => props.onClick(index)}>{value}</td>)\n      } else {\n        return (<td className={`cell selected_cell`} key={index} onClick={() => props.onClick(index)}>{value}</td>)\n      }\n      \n    }\n  }\n\n  // Default Cell: pre-generated cell\n  function normal_cell(index, value) {\n    if (value !== '0' && value !== '') {\n      if (initArray[index] === '0' || initArray[index] === '') {\n        return (<td className=\"cell user_input_cell\" key={index} onClick={() => props.onClick(index)}>{value}</td>)\n      } else {\n        return (<td className=\"cell default_cell\" key={index} onClick={() => props.onClick(index)}>{value}</td>)\n      }\n    } else {\n      return (<td className=\"cell\" key={index} onClick={() => props.onClick(index)}>{value}</td>)\n    }\n  }\n\n  // Sudoku Board [9x9]\n  return (\n    <div className=\"sudoku_game\">\n      <table id=\"sudoku_board\" >\n        <tbody>{\n          rows.map((row) => {\n            return (\n              <tr className=\"sudoku_row\" key={row}>{\n                  rows.map((column) => {\n                    const index = (row * 9) + column;\n                    const value = gameArray[index];\n\n                    if (cellSelected === index) return highlighted_cell(index, value, 'highlight');\n                      \n                    if (fastMode) {\n                      if (numberSelected !== '0' && check_cell_number(row, column)) {\n                        return highlighted_cell(index, value, '');\n                      } else {\n                        return normal_cell(index, value);\n                      }\n                    } else {\n                      if (cellSelected !== -1 && check_cell_number(row, column)) {\n                        return highlighted_cell(index, value, '');\n                      } else {\n                        return normal_cell(index, value);\n                      }\n                    }\n                  })\n              }</tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}