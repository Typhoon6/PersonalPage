{"ast":null,"code":"/* eslint-disable import/no-unresolved */\nimport axios from 'axios';\nimport handleError from './ErrorHandler.js'; // eslint-disable-next-line consistent-return\n\nasync function getJSON(values, url, // eslint-disable-next-line no-unused-vars\ncallback) {\n  const options = {\n    baseURL: `${values.protocol}${values.hostName}/`,\n    timeout: values.timeout\n  };\n\n  try {\n    // Retrieve possible content from memory-cache\n    const cachedResult = values.cache.get(url);\n\n    if (cachedResult) {\n      if (callback) {\n        // Call callback without errors\n        callback(cachedResult);\n      }\n\n      return cachedResult;\n    }\n\n    const response = await axios.get(url, options); // if there is an error\n\n    if (response.status !== 200) {\n      handleError(response, callback);\n    } else {\n      // If everything was good\n      // cache the object in memory-cache\n      // only if cacheLimit > 0\n      const responseData = response.data;\n\n      if (values.cacheLimit > 0) {\n        values.cache.set(url, responseData, values.cacheLimit);\n      } // If a callback is present\n\n\n      if (callback) {\n        // Call it, without errors\n        callback(responseData);\n      } else {\n        return responseData;\n      }\n    }\n  } catch (error) {\n    handleError(error, callback);\n  }\n}\n\nexport default getJSON;","map":{"version":3,"sources":["C:/Users/admin/Downloads/Future/personal-project/node_modules/pokedex-promise-v2/dist/src/utils/Getter.js"],"names":["axios","handleError","getJSON","values","url","callback","options","baseURL","protocol","hostName","timeout","cachedResult","cache","get","response","status","responseData","data","cacheLimit","set","error"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB,C,CACA;;AACA,eAAeC,OAAf,CAAuBC,MAAvB,EAA+BC,GAA/B,EACA;AACAC,QAFA,EAEU;AACN,QAAMC,OAAO,GAAG;AACZC,IAAAA,OAAO,EAAG,GAAEJ,MAAM,CAACK,QAAS,GAAEL,MAAM,CAACM,QAAS,GADlC;AAEZC,IAAAA,OAAO,EAAEP,MAAM,CAACO;AAFJ,GAAhB;;AAIA,MAAI;AACA;AACA,UAAMC,YAAY,GAAGR,MAAM,CAACS,KAAP,CAAaC,GAAb,CAAiBT,GAAjB,CAArB;;AACA,QAAIO,YAAJ,EAAkB;AACd,UAAIN,QAAJ,EAAc;AACV;AACAA,QAAAA,QAAQ,CAACM,YAAD,CAAR;AACH;;AACD,aAAOA,YAAP;AACH;;AACD,UAAMG,QAAQ,GAAG,MAAMd,KAAK,CAACa,GAAN,CAAUT,GAAV,EAAeE,OAAf,CAAvB,CAVA,CAWA;;AACA,QAAIQ,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBd,MAAAA,WAAW,CAACa,QAAD,EAAWT,QAAX,CAAX;AACH,KAFD,MAGK;AACD;AACA;AACA;AACA,YAAMW,YAAY,GAAGF,QAAQ,CAACG,IAA9B;;AACA,UAAId,MAAM,CAACe,UAAP,GAAoB,CAAxB,EAA2B;AACvBf,QAAAA,MAAM,CAACS,KAAP,CAAaO,GAAb,CAAiBf,GAAjB,EAAsBY,YAAtB,EAAoCb,MAAM,CAACe,UAA3C;AACH,OAPA,CAQD;;;AACA,UAAIb,QAAJ,EAAc;AACV;AACAA,QAAAA,QAAQ,CAACW,YAAD,CAAR;AACH,OAHD,MAIK;AACD,eAAOA,YAAP;AACH;AACJ;AACJ,GAhCD,CAiCA,OAAOI,KAAP,EAAc;AACVnB,IAAAA,WAAW,CAACmB,KAAD,EAAQf,QAAR,CAAX;AACH;AACJ;;AACD,eAAeH,OAAf","sourcesContent":["/* eslint-disable import/no-unresolved */\nimport axios from 'axios';\nimport handleError from './ErrorHandler.js';\n// eslint-disable-next-line consistent-return\nasync function getJSON(values, url, \n// eslint-disable-next-line no-unused-vars\ncallback) {\n    const options = {\n        baseURL: `${values.protocol}${values.hostName}/`,\n        timeout: values.timeout,\n    };\n    try {\n        // Retrieve possible content from memory-cache\n        const cachedResult = values.cache.get(url);\n        if (cachedResult) {\n            if (callback) {\n                // Call callback without errors\n                callback(cachedResult);\n            }\n            return cachedResult;\n        }\n        const response = await axios.get(url, options);\n        // if there is an error\n        if (response.status !== 200) {\n            handleError(response, callback);\n        }\n        else {\n            // If everything was good\n            // cache the object in memory-cache\n            // only if cacheLimit > 0\n            const responseData = response.data;\n            if (values.cacheLimit > 0) {\n                values.cache.set(url, responseData, values.cacheLimit);\n            }\n            // If a callback is present\n            if (callback) {\n                // Call it, without errors\n                callback(responseData);\n            }\n            else {\n                return responseData;\n            }\n        }\n    }\n    catch (error) {\n        handleError(error, callback);\n    }\n}\nexport default getJSON;\n"]},"metadata":{},"sourceType":"module"}