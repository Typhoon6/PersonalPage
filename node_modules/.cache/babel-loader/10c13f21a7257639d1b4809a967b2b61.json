{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\Future\\\\personal-project\\\\src\\\\pages\\\\cellml_page.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport { Link } from \"react-router-dom\";\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport \"../style/projectselector.css\";\nimport \"../style/pageselector_options.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CellMLPage() {\n  _s();\n\n  const SEL = 'custom-section';\n  const SECTION_SEL = `.${SEL}`;\n  const originalColors = ['#ff5f45', '#0798ec', '#fc6c7c', '#435b71', 'orange', 'blue', 'purple', 'yellow'],\n        originalPages = [{\n    text: \"CellML\"\n  }, {\n    text: \"Section 2\"\n  }, {\n    text: \"Section 3\"\n  }];\n  const [sectionsColor, setsectionsColor] = useState([...originalColors]),\n        [fullpages, setfullpages] = useState([...originalPages]);\n\n  const onLeave = (origin, destination, direction) => {\n    console.log(\"onLeave\", {\n      origin,\n      destination,\n      direction\n    }); // arguments are mapped in order of fullpage.js callback arguments do something\n    // with the event\n  },\n        handleChangeColors = () => {\n    const newColors = sectionsColor[0] === \"yellow\" ? [...originalColors] : [\"yellow\", \"blue\", \"white\"];\n    return setsectionsColor(newColors);\n  },\n        handleAddSection = () => {\n    const {\n      length\n    } = fullpages;\n    fullpages.push({\n      text: `section ${length + 1}`,\n      id: Math.random()\n    });\n    return setfullpages([...fullpages]);\n  },\n        handleRemoveSection = () => {\n    const newPages = [...fullpages];\n    newPages.pop();\n    return setfullpages(newPages);\n  };\n\n  const Menu = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu\",\n    style: {\n      position: \"fixed\",\n      top: 0,\n      zIndex: 100\n    },\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddSection,\n          children: \" Add Section \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRemoveSection,\n          children: \" Remove Section \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleChangeColors,\n          children: \" Change background colors \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n\n  const cellml_logo = \"https://www.cellml.org/++theme++cellml.theme/assets/images/logo-cellml.png\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFullpage, {\n      debug: true\n      /* Debug logging */\n      ,\n      navigation: true,\n      anchors: ['firstPage', 'secondPage', 'thirdPage'],\n      sectionSelector: SECTION_SEL,\n      onLeave: onLeave,\n      sectionsColor: sectionsColor,\n      render: () => /*#__PURE__*/_jsxDEV(ReactFullpage.Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 4\n        }, this), fullpages.map(_ref => {\n          let {\n            text\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: SEL,\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 2\n  }, this);\n}\n\n_s(CellMLPage, \"NsIAfrbspNYIbLndqbZZ5UFhrDo=\");\n\n_c = CellMLPage;\nexport default CellMLPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellMLPage\");","map":{"version":3,"sources":["C:/Users/admin/Downloads/Future/personal-project/src/pages/cellml_page.js"],"names":["React","useState","BrowserRouter","Router","Route","Routes","ReactDOM","Link","ReactFullpage","CellMLPage","SEL","SECTION_SEL","originalColors","originalPages","text","sectionsColor","setsectionsColor","fullpages","setfullpages","onLeave","origin","destination","direction","console","log","handleChangeColors","newColors","handleAddSection","length","push","id","Math","random","handleRemoveSection","newPages","pop","Menu","position","top","zIndex","cellml_logo","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route , Routes} from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactFullpage from '@fullpage/react-fullpage';\r\n\r\nimport \"../style/projectselector.css\";\r\nimport \"../style/pageselector_options.css\";\r\n\r\n\r\nfunction CellMLPage () {\r\n\r\n  const SEL = 'custom-section';\r\n  const SECTION_SEL = `.${SEL}`;\r\n\r\n\r\n  const\r\n  originalColors = ['#ff5f45', '#0798ec', '#fc6c7c', '#435b71', 'orange', 'blue', 'purple', 'yellow'],\r\n  originalPages = [{ text: \"CellML\" }, { text: \"Section 2\" }, { text: \"Section 3\" }];\r\n  const\r\n    [sectionsColor, setsectionsColor] = useState([...originalColors]),\r\n    [fullpages, setfullpages] = useState([...originalPages]);\r\n\r\n  const\r\n    onLeave = (origin, destination, direction) => {\r\n      console.log(\"onLeave\", { origin, destination, direction });\r\n      // arguments are mapped in order of fullpage.js callback arguments do something\r\n      // with the event\r\n    },\r\n\r\n    handleChangeColors = () => {\r\n      const newColors =\r\n        sectionsColor[0] === \"yellow\"\r\n          ? [...originalColors]\r\n          : [\"yellow\", \"blue\", \"white\"];\r\n      return setsectionsColor(newColors);\r\n    },\r\n\r\n    handleAddSection = () => {\r\n      const { length } = fullpages;\r\n      fullpages.push({\r\n        text: `section ${length + 1}`,\r\n        id: Math.random()\r\n      });\r\n      return setfullpages([...fullpages])\r\n    },\r\n\r\n    handleRemoveSection = () => {\r\n      const newPages = [...fullpages];\r\n      newPages.pop();\r\n      return setfullpages(newPages)\r\n    }\r\n\r\n\r\n  const Menu = () => (\r\n    <div\r\n      className=\"menu\"\r\n      style={{\r\n        position: \"fixed\",\r\n        top: 0,\r\n        zIndex: 100\r\n      }}\r\n    >\r\n      <ul className=\"actions\">\r\n        <li>\r\n          <button onClick={handleAddSection}> Add Section </button>\r\n          <button onClick={handleRemoveSection}> Remove Section </button>\r\n          <button onClick={handleChangeColors}> Change background colors </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n\r\n\t  const cellml_logo = \"https://www.cellml.org/++theme++cellml.theme/assets/images/logo-cellml.png\";\r\n\r\n  return (\r\n\t<div className=\"App\">\r\n      <Menu />\r\n      <ReactFullpage\r\n        debug /* Debug logging */\r\n        navigation\r\n        anchors={['firstPage', 'secondPage', 'thirdPage']}\r\n        sectionSelector={SECTION_SEL}\r\n        onLeave={onLeave}\r\n        sectionsColor={sectionsColor}\r\n\r\n        render={() => (\r\n          <ReactFullpage.Wrapper>\r\n\t\t\t<div>\r\n\t\t\t\tHello\r\n\t\t\t</div>\r\n\r\n            {fullpages.map(({ text }) => (\r\n              <div key={text} className={SEL}>\r\n                <h1>{text}</h1>\r\n              </div>\r\n            ))}\r\n          </ReactFullpage.Wrapper>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CellMLPage;\r\n"]},"metadata":{},"sourceType":"module"}