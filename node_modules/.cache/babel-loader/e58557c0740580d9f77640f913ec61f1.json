{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\admin\\\\Downloads\\\\Future\\\\personal-project\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState,useEffect}from'react';import{useSudokuContext}from'../context/SudokuContext';import moment from'moment';// Timer of game time\nimport{jsx as _jsx}from\"react/jsx-runtime\";export function Timer(){var _useState=useState(moment()),_useState2=_slicedToArray(_useState,2),time=_useState2[0],setTime=_useState2[1];var _useSudokuContext=useSudokuContext(),timeGameStarted=_useSudokuContext.timeGameStarted,won=_useSudokuContext.won;// Increase timer every second\nuseEffect(function(){if(!won){setTimeout(function(){return setTime(moment());},1000);};});// Time converted into a readable string formation\nfunction getTimer(){var secondsTotal=time.diff(timeGameStarted,'seconds');var dur=moment.duration(secondsTotal,'seconds');var hour=dur.hours();var minute=dur.minutes();var second=dur.seconds();var readable_time='';if(secondsTotal<=0){return'00:00';}else{// Time in form: hr:min:sec with minute and second in double digit form i.e. 01 to 59\nreadable_time+=hour?''+hour+':':'';readable_time+=minute?(minute<10?'0':'')+minute+':':'00:';readable_time+=second<10?'0'+second:second;return readable_time;}}return/*#__PURE__*/_jsx(\"div\",{id:\"timer\",children:getTimer()});}","map":{"version":3,"sources":["C:/Users/admin/Downloads/Future/personal-project/src/pages/Sudoku/components/Timer.js"],"names":["React","useState","useEffect","useSudokuContext","moment","Timer","time","setTime","timeGameStarted","won","setTimeout","getTimer","secondsTotal","diff","dur","duration","hour","hours","minute","minutes","second","seconds","readable_time"],"mappings":"iJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,gBAAT,KAAiC,0BAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAEA;2CACA,MAAO,SAASC,CAAAA,KAAT,EAAkB,CACvB,cAAsBJ,QAAQ,CAACG,MAAM,EAAP,CAA9B,wCAAKE,IAAL,eAAWC,OAAX,eACA,sBAA+BJ,gBAAgB,EAA/C,CAAMK,eAAN,mBAAMA,eAAN,CAAuBC,GAAvB,mBAAuBA,GAAvB,CAEA;AACAP,SAAS,CAAC,UAAM,CACd,GAAI,CAACO,GAAL,CAAU,CAAEC,UAAU,CAAC,iBAAMH,CAAAA,OAAO,CAACH,MAAM,EAAP,CAAb,EAAD,CAA0B,IAA1B,CAAV,CAA2C,EACxD,CAFQ,CAAT,CAIA;AACA,QAASO,CAAAA,QAAT,EAAoB,CAClB,GAAIC,CAAAA,YAAY,CAAGN,IAAI,CAACO,IAAL,CAAUL,eAAV,CAA2B,SAA3B,CAAnB,CACA,GAAIM,CAAAA,GAAG,CAAGV,MAAM,CAACW,QAAP,CAAgBH,YAAhB,CAA8B,SAA9B,CAAV,CACA,GAAII,CAAAA,IAAI,CAAKF,GAAG,CAACG,KAAJ,EAAb,CACA,GAAIC,CAAAA,MAAM,CAAGJ,GAAG,CAACK,OAAJ,EAAb,CACA,GAAIC,CAAAA,MAAM,CAAGN,GAAG,CAACO,OAAJ,EAAb,CAEA,GAAIC,CAAAA,aAAa,CAAG,EAApB,CACA,GAAIV,YAAY,EAAI,CAApB,CAAuB,CACrB,MAAO,OAAP,CACD,CAFD,IAEO,CACL;AACAU,aAAa,EAAKN,IAAD,CAAS,GAAKA,IAAL,CAAY,GAArB,CAA2B,EAA5C,CACAM,aAAa,EAAKJ,MAAD,CAAW,CAACA,MAAM,CAAG,EAAT,CAAc,GAAd,CAAoB,EAArB,EAA2BA,MAA3B,CAAoC,GAA/C,CAAqD,KAAtE,CACAI,aAAa,EAAKF,MAAM,CAAG,EAAV,CAAgB,IAAMA,MAAtB,CAA+BA,MAAhD,CACA,MAAOE,CAAAA,aAAP,CACD,CACF,CAED,mBACE,YAAK,EAAE,CAAC,OAAR,UAAiBX,QAAQ,EAAzB,EADF,CAGD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSudokuContext } from '../context/SudokuContext';\nimport moment from 'moment';\n\n// Timer of game time\nexport function Timer () {  \n  let [time, setTime] = useState(moment());\n  let { timeGameStarted, won } = useSudokuContext();\n\n  // Increase timer every second\n  useEffect(() => {\n    if (!won) { setTimeout(() => setTime(moment()), 1000) };\n  });\n\n  // Time converted into a readable string formation\n  function getTimer() {\n    let secondsTotal = time.diff(timeGameStarted, 'seconds');\n    let dur = moment.duration(secondsTotal, 'seconds');\n    let hour   = dur.hours();\n    let minute = dur.minutes();\n    let second = dur.seconds();\n\n    let readable_time = '';\n    if (secondsTotal <= 0) {\n      return '00:00'\n    } else {\n      // Time in form: hr:min:sec with minute and second in double digit form i.e. 01 to 59\n      readable_time += (hour) ? '' + hour + ':' : '';\n      readable_time += (minute) ? (minute < 10 ? '0' : '') + minute + ':' : '00:';\n      readable_time += (second < 10) ? '0' + second : second;\n      return readable_time;\n    } \n  }\n\n  return (\n    <div id=\"timer\">{getTimer()}</div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}