{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\Future\\\\personal-project\\\\src\\\\pages\\\\Sudoku\\\\components\\\\layout\\\\GameSection.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSudokuContext } from '../../context/SudokuContext'; // Sudoku Board\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GameSection(props) {\n  _s();\n\n  const rows = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n  let {\n    numberSelected,\n    gameArray,\n    fastMode,\n    cellSelected,\n    initArray\n  } = useSudokuContext();\n  /**\n   * 单元格突出显示方法1：突出显示所有单元格\n   * 与当前单元格相关。 通过相关，我的意思是所有\n   * 与当前单元格在同一行/列/框中的单元格。\n   */\n  // eslint-disable-next-line\n\n  function _isCellRelatedToSelectedCell(row, column) {\n    if (cellSelected === row * 9 + column) {\n      return true;\n    }\n\n    let rowOfSelectedCell = Math.floor(cellSelected / 9);\n    let columnOfSelectedCell = cellSelected % 9;\n\n    if (rowOfSelectedCell === row || columnOfSelectedCell === column) {\n      return true;\n    }\n\n    return [[0, 3, 0, 3], [0, 3, 3, 6], [0, 3, 6, 9], [3, 6, 0, 3], [3, 6, 3, 6], [3, 6, 6, 9], [6, 9, 0, 3], [6, 9, 3, 6], [6, 9, 6, 9]].some(array => {\n      if (rowOfSelectedCell > array[0] - 1 && row > array[0] - 1 && rowOfSelectedCell < array[1] && row < array[1] && columnOfSelectedCell > array[2] - 1 && column > array[2] - 1 && columnOfSelectedCell < array[3] && column < array[3]) return true;\n      return false;\n    });\n  }\n  /**\n   * 单元格突出显示方法 2：突出显示所有单元格\n   * 与当前单元格中的数字相同。\n   */\n\n\n  function _isCellSameAsSelectedCell(row, column) {\n    if (fastMode) {\n      if (numberSelected === gameArray[row * 9 + column]) {\n        return true;\n      }\n\n      return false;\n    } else {\n      if (cellSelected === row * 9 + column) {\n        return true;\n      }\n\n      if (gameArray[cellSelected] === '0') {\n        return false;\n      }\n\n      if (gameArray[cellSelected] === gameArray[row * 9 + column]) {\n        return true;\n      }\n    }\n  } // Highlight Cell\n\n\n  function highlighted_cell(index, value, highlight) {\n    if (value !== '0' && value !== '') {\n      if (initArray[index] === '0' || initArray[index] === '') {\n        if (highlight === 'highlight') {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `cell user_input_cell highlight_cell`,\n            onClick: () => props.onClick(index),\n            children: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `cell user_input_cell selected_cell`,\n            onClick: () => props.onClick(index),\n            children: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this);\n        }\n      } else {\n        if (highlight === 'highlight') {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `cell default_cell highlight_cell`,\n            onClick: () => props.onClick(index),\n            children: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `cell default_cell selected_cell`,\n            onClick: () => props.onClick(index),\n            children: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this);\n        }\n      }\n    } else {\n      if (highlight === 'highlight') {\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          className: `cell highlight_cell`,\n          onClick: () => props.onClick(index),\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          className: `cell selected_cell`,\n          onClick: () => props.onClick(index),\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this);\n      }\n    }\n  } // Default Cell: pre-generated cell\n\n\n  function normal_cell(index, value) {\n    if (value !== '0' && value !== '') {\n      if (initArray[index] === '0' || initArray[index] === '') {\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"cell user_input_cell\",\n          onClick: () => props.onClick(index),\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"cell default_cell\",\n          onClick: () => props.onClick(index),\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"cell\",\n        onClick: () => props.onClick(index),\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this);\n    }\n  } // Sudoku Board [9x9]\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sudoku_game\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"sudoku_board\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map(row => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"sudoku_row\",\n            children: rows.map(column => {\n              const index = row * 9 + column;\n              const value = gameArray[index];\n              if (cellSelected === index) return highlighted_cell(index, value, 'highlight');\n\n              if (fastMode) {\n                if (numberSelected !== '0' && _isCellSameAsSelectedCell(row, column)) {\n                  return highlighted_cell(index, value, '');\n                } else {\n                  return normal_cell(index, value);\n                }\n              } else {\n                if (cellSelected !== -1 && _isCellSameAsSelectedCell(row, column)) {\n                  return highlighted_cell(index, value, '');\n                } else {\n                  return normal_cell(index, value);\n                }\n              }\n            })\n          }, row, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GameSection, \"vGxW9pOuxRaKlK/mXbo5VzFzPUU=\", false, function () {\n  return [useSudokuContext];\n});\n\n_c = GameSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameSection\");","map":{"version":3,"sources":["C:/Users/admin/Downloads/Future/personal-project/src/pages/Sudoku/components/layout/GameSection.js"],"names":["React","useSudokuContext","GameSection","props","rows","numberSelected","gameArray","fastMode","cellSelected","initArray","_isCellRelatedToSelectedCell","row","column","rowOfSelectedCell","Math","floor","columnOfSelectedCell","some","array","_isCellSameAsSelectedCell","highlighted_cell","index","value","highlight","onClick","normal_cell","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSudokuContext } from '../../context/SudokuContext';\n\n// Sudoku Board\nexport function GameSection (props) {\n\n  const rows = [0,1,2,3,4,5,6,7,8];\n  let { numberSelected,\n        gameArray,\n        fastMode,\n        cellSelected,\n        initArray } = useSudokuContext();\n\n  /**\n   * 单元格突出显示方法1：突出显示所有单元格\n   * 与当前单元格相关。 通过相关，我的意思是所有\n   * 与当前单元格在同一行/列/框中的单元格。\n   */\n  // eslint-disable-next-line\n  function _isCellRelatedToSelectedCell(row, column) {\n    if (cellSelected === row * 9 + column) {\n      return true;\n    }\n    let rowOfSelectedCell = Math.floor(cellSelected / 9);\n    let columnOfSelectedCell = cellSelected % 9;\n    if (rowOfSelectedCell === row || columnOfSelectedCell === column) {\n      return true;\n    }\n    return [  [0,3,0,3],\n              [0,3,3,6],\n              [0,3,6,9],\n              [3,6,0,3],\n              [3,6,3,6],\n              [3,6,6,9],\n              [6,9,0,3],\n              [6,9,3,6],\n              [6,9,6,9]\n            ].some((array) => {\n              if (rowOfSelectedCell > array[0]-1 && row > array[0]-1 &&\n                  rowOfSelectedCell < array[1] && row < array[1] &&\n                  columnOfSelectedCell > array[2]-1 && column > array[2]-1 &&\n                  columnOfSelectedCell < array[3] && column < array[3])\n                  return true;\n              return false;\n            });\n  }\n\n  /**\n   * 单元格突出显示方法 2：突出显示所有单元格\n   * 与当前单元格中的数字相同。\n   */\n  function _isCellSameAsSelectedCell(row, column) {\n    if (fastMode) {\n      if (numberSelected === gameArray[row * 9 + column]) {\n        return true;\n      }\n      return false;\n    } else {\n      if (cellSelected === row * 9 + column) {\n        return true;\n      }\n      if (gameArray[cellSelected] === '0') {\n        return false;\n      }\n      if (gameArray[cellSelected] === gameArray[row * 9 + column]) {\n        return true;\n      }\n    }\n  }\n\n  // Highlight Cell\n  function highlighted_cell(index, value, highlight) {\n    if (value !== '0' && value !== '') {\n      if (initArray[index] === '0' || initArray[index] === '') {\n        if (highlight === 'highlight') {  \n          return (<td className={`cell user_input_cell highlight_cell`} key={index} onClick={() => props.onClick(index)}>{value}</td>)\n        } else {\n          return (<td className={`cell user_input_cell selected_cell`} key={index} onClick={() => props.onClick(index)}>{value}</td>)\n        }\n        \n      } else {\n        if (highlight === 'highlight') { \n          return (<td className={`cell default_cell highlight_cell`} key={index} onClick={() => props.onClick(index)}>{value}</td>)\n        } else {\n          return (<td className={`cell default_cell selected_cell`} key={index} onClick={() => props.onClick(index)}>{value}</td>)\n        }\n        \n      }\n    } \n    else {\n      if (highlight === 'highlight') {\n        return (<td className={`cell highlight_cell`} key={index} onClick={() => props.onClick(index)}>{value}</td>)\n      } else {\n        return (<td className={`cell selected_cell`} key={index} onClick={() => props.onClick(index)}>{value}</td>)\n      }\n      \n    }\n  }\n\n  // Default Cell: pre-generated cell\n  function normal_cell(index, value) {\n    if (value !== '0' && value !== '') {\n      if (initArray[index] === '0' || initArray[index] === '') {\n        return (<td className=\"cell user_input_cell\" key={index} onClick={() => props.onClick(index)}>{value}</td>)\n      } else {\n        return (<td className=\"cell default_cell\" key={index} onClick={() => props.onClick(index)}>{value}</td>)\n      }\n    } else {\n      return (<td className=\"cell\" key={index} onClick={() => props.onClick(index)}>{value}</td>)\n    }\n  }\n\n  // Sudoku Board [9x9]\n  return (\n    <div className=\"sudoku_game\">\n      <table id=\"sudoku_board\">\n        <tbody>{\n          rows.map((row) => {\n            return (\n              <tr className=\"sudoku_row\" key={row}>{\n                  rows.map((column) => {\n                    const index = (row * 9) + column;\n                    const value = gameArray[index];\n\n                    if (cellSelected === index) return highlighted_cell(index, value, 'highlight');\n                      \n                    if (fastMode) {\n                      if (numberSelected !== '0' && _isCellSameAsSelectedCell(row, column)) {\n                        return highlighted_cell(index, value, '');\n                      } else {\n                        return normal_cell(index, value);\n                      }\n                    } else {\n                      if (cellSelected !== -1 && _isCellSameAsSelectedCell(row, column)) {\n                        return highlighted_cell(index, value, '');\n                      } else {\n                        return normal_cell(index, value);\n                      }\n                    }\n                  })\n              }</tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}